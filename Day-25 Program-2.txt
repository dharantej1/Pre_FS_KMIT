/*
You are given two words source[] and target[].Your can interchange exactly two 
characters in the source.
For example, interchanging 1 and 3 positions in a word "pqrs" results "psrq".

Return true if you can equal the source to the target after interchange. otherwise false.

Input Format:
-------------
Line-1: Two space separated strings represent words.
 
Output Format:
--------------
Print a boolean value.
 
Constraints:
-----------
1 <= source.length , target.length <= 2*10^4
source and target consist only lowercase letters.

 
Sample Input-1:
---------------
pq qp
 
Sample Output-1:
----------------
true

Explanation:
------------
You can Interchange source[0] = 'p' and source[1] = 'q' to get "qp", which is 
equal to target.
 
Sample Input-2:
---------------
xy xy

Sample Output-2:
----------------
false

Explanation:
------------
The only letters you can Interchange are source[0] = 'x' and source[1] = 'y', 
which results in "yx" != target.

Sample Input-3:
---------------
ppppqr pppprq

Sample Output-3:
----------------
true

*/
#include <bits/stdc++.h>
using namespace std;


bool strings(string str1, string str2)
{
	int len1 = str1.length();
	int len2 = str2.length();


	if (len1 != len2)
		return false;

	if(str1 == str2){
	set<char>se(str1.begin(), str1.end());
		
	if(se.size() < str1.length()){
		return true;
	}
	return false;
		
	}

	int prev = -1, curr = -1;

	int count = 0;
	for (int i=0; i<len1; i++)
	{

		if (str1[i] != str2[i])
		{
		
			count++;

			
			if (count > 2)
				return false;

			
			prev = curr;
			curr = i;
		}
	}

	
	return (count == 2 &&
			str1[prev] == str2[curr] &&
			str1[curr] == str2[prev]);
}


int main()
{
	string str1,str2;
	cin>>str1>>str2;

	strings(str1,str2) ? cout << "True"
							: cout << "False";
	return 0;
}
