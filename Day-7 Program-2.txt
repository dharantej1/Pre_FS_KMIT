Govind is playing with strings.
He is given two strings S1 and S2, He has to find if each character in S1 can S2 a word in S2 or not.

A S2 that is both one-to-one (an injection) and onto (a surjection), 
i.e. a function which relates each letter in string S1 to a separate and distinct non-empty word in S2, 
where each non-empty word in S2 also has a corresponding letter in S1.

Return true,if it is a complete S2.
Otherwise false.

Note: You may assume S1 and S2 contains only lowercase letters, S2 contains whitespace also.

Input Format:
-------------
Line-1 -> A string S1, single word
Line-2 -> A string S2, group of space separated words.

Output Format:
--------------
Print a boolean value.


Sample Input-1:
---------------
baba
cat rat cat rat

Sample Output-1:
----------------
true

Sample Input-2:
---------------
baba
cat rat rat cat

Sample Output-2:
----------------
false

#include<bits/stdc++.h>
using namespace std;
int main(){
    string s1,s2;
    getline(cin,s1);
    getline(cin,s2);
    vector<string> s22;
    string word="";
    for(int i=0;i<s2.length();i++){
        if(s2[i]!=' '){
            word+=s2[i];
        }
        else{
            s22.push_back(word);
            word="";
        }
    }
    s22.push_back(word);
    int flag=0;
    unordered_map<string,char> mp;
    for(int i=0;i<s1.length();i++){
        if(mp.find(s22[i])!=mp.end()){
            if(mp[s22[i]]!=s1[i]){
                flag=1;
                break;
            }
        }
        else{
            mp[s22[i]]=s1[i];
        }
    }
    if(flag==0){
        cout<<"true";
    }
    else{
        cout<<"false";
    }
    return 0;
}